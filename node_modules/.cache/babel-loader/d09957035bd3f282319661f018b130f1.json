{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\mathi\\\\Projects\\\\utstilling\\\\prosjekt_2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\mathi\\\\Projects\\\\utstilling\\\\prosjekt_2\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport RadioButtons from \"./Radiobuttons\";\nimport Tabs from \"./Tabs\";\nconst ART_CATEGORIES = [{\n  category: \"audio\",\n  choices: [\"acoustic\", \"cinematic\", \"rock\"]\n}, {\n  category: \"image\",\n  choices: [\"butterfly\", \"flower\", \"planet\"]\n}, {\n  category: \"text\",\n  choices: [\"lyric\", \"poem\", \"quote\"]\n}];\nexport default function App() {\n  //Keeps track of active categories:\n  const _useState = useState(\"acoustic\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeAudioCategory = _useState2[0],\n        setActiveAudioCategory = _useState2[1];\n\n  const _useState3 = useState(\"butterfly\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeImageCategory = _useState4[0],\n        setActiveImageCategory = _useState4[1];\n\n  const _useState5 = useState(\"lyric\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        activeTextCategory = _useState6[0],\n        setActiveTextCategory = _useState6[1]; //Stores media being displayed:\n\n\n  const _useState7 = useState(\"0\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        activeTab = _useState8[0],\n        setActiveTab = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        text = _useState10[0],\n        setText = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        image = _useState12[0],\n        setImage = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        audio = _useState14[0],\n        setAudio = _useState14[1];\n\n  function changeActiveArt(category, active) {\n    switch (category) {\n      case \"audio\":\n        setActiveAudioCategory(active);\n        break;\n\n      case \"image\":\n        setActiveImageCategory(active);\n        break;\n\n      case \"text\":\n        setActiveTextCategory(active);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function changeActiveTab(active) {\n    setActiveTab(active);\n  } //Fetch texts\n\n\n  useEffect(() => {\n    // Displays nothing while fetching new text to enhance UX\n    setText(null);\n    const url = process.env.PUBLIC_URL + \"/content/text/\" + activeTextCategory + \".json\";\n    let data = sessionStorage.getItem(url); //If text stored in sessionStorage, no need to fetch again\n\n    if (data) {\n      setText(JSON.parse(data).items[activeTab]);\n    } //If not fetched before; fetch and store in sessionStorage\n    else {\n        fetch(url).then(res => res.json()).then(res => {\n          setText(res.items[activeTab]);\n          sessionStorage.setItem(url, JSON.stringify(res));\n        });\n      }\n  }, [activeTextCategory, activeTab]); //Fetch audio\n\n  useEffect(() => {\n    // Displays nothing while fetching new audio to enhance UX\n    setAudio(null);\n    const url = process.env.PUBLIC_URL + \"/content/audio/\".concat(activeAudioCategory, \"/\").concat(activeAudioCategory).concat(activeTab, \".mp3\");\n    let data = sessionStorage.getItem(url); //If audio stored in sessionStorage, no need to fetch again\n\n    if (data) {\n      setAudio(JSON.parse(data));\n    } //If not fetched before; fetch and store in sessionStorage\n    else {\n        setAudio(url);\n        sessionStorage.setItem(url, JSON.stringify(url));\n      }\n  }, [activeAudioCategory, activeTab]); //Fetch image\n\n  useEffect(() => {\n    // Displays nothing while fetching new image to enhance UX\n    setImage(null);\n    const url = process.env.PUBLIC_URL + \"/content/image/\".concat(activeImageCategory, \"/\").concat(activeImageCategory).concat(activeTab, \".svg\");\n    let data = sessionStorage.getItem(url); //If image stored in sessionStorage, no need to fetch again\n\n    if (data) {\n      setImage(JSON.parse(data));\n    } //If not fetched before; fetch and store in sessionStorage\n    else {\n        fetch(url).then(res => res.text()).then(svg => {\n          setImage(svg);\n          sessionStorage.setItem(url, JSON.stringify(svg));\n        });\n      }\n  }, [activeImageCategory, activeTab]); //Store favourite artcollection in localStorage\n\n  function makeFavourite() {\n    if (typeof Storage !== \"undefined\") {\n      localStorage.setItem(\"favTab\", activeTab);\n      localStorage.setItem(\"favImage\", activeImageCategory);\n      localStorage.setItem(\"favAudio\", activeAudioCategory);\n      localStorage.setItem(\"favText\", activeTextCategory);\n    }\n  } //Get favourite artcollection from localStorage (if it exists)\n\n\n  function showFavourite(e) {\n    e.preventDefault();\n\n    if (typeof Storage !== \"undefined\") {\n      if (localStorage.favImage) {\n        setActiveAudioCategory(localStorage.getItem(\"favAudio\"));\n        setActiveImageCategory(localStorage.getItem(\"favImage\"));\n        setActiveTextCategory(localStorage.getItem(\"favText\"));\n        setActiveTab(localStorage.getItem(\"favTab\"));\n      } else {\n        console.log(\"You have no favourite :(\");\n      }\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"grid-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"ART EXHIBITION\")), React.createElement(\"div\", {\n    className: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"flex-container-radio footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, ART_CATEGORIES.map((element, index) => {\n    return React.createElement(RadioButtons, {\n      changeActiveArt: changeActiveArt,\n      active: [activeAudioCategory, activeImageCategory, activeTextCategory],\n      key: index,\n      category: element.category,\n      choices: element.choices,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    });\n  }))));\n}","map":{"version":3,"sources":["C:\\Users\\mathi\\Projects\\utstilling\\prosjekt_2\\src\\components\\App.js"],"names":["React","useState","useEffect","RadioButtons","Tabs","ART_CATEGORIES","category","choices","App","activeAudioCategory","setActiveAudioCategory","activeImageCategory","setActiveImageCategory","activeTextCategory","setActiveTextCategory","activeTab","setActiveTab","text","setText","image","setImage","audio","setAudio","changeActiveArt","active","changeActiveTab","url","process","env","PUBLIC_URL","data","sessionStorage","getItem","JSON","parse","items","fetch","then","res","json","setItem","stringify","svg","makeFavourite","Storage","localStorage","showFavourite","e","preventDefault","favImage","console","log","map","element","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport RadioButtons from \"./Radiobuttons\";\r\nimport Tabs from \"./Tabs\";\r\n\r\nconst ART_CATEGORIES = [\r\n  {\r\n    category: \"audio\",\r\n    choices: [\"acoustic\", \"cinematic\", \"rock\"]\r\n  },\r\n  {\r\n    category: \"image\",\r\n    choices: [\"butterfly\", \"flower\", \"planet\"]\r\n  },\r\n  {\r\n    category: \"text\",\r\n    choices: [\"lyric\", \"poem\", \"quote\"]\r\n  }\r\n];\r\n\r\nexport default function App() {\r\n  //Keeps track of active categories:\r\n  const [activeAudioCategory, setActiveAudioCategory] = useState(\"acoustic\");\r\n  const [activeImageCategory, setActiveImageCategory] = useState(\"butterfly\");\r\n  const [activeTextCategory, setActiveTextCategory] = useState(\"lyric\");\r\n\r\n  //Stores media being displayed:\r\n  const [activeTab, setActiveTab] = useState(\"0\");\r\n  const [text, setText] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [audio, setAudio] = useState(null);\r\n\r\n  function changeActiveArt(category, active) {\r\n    switch (category) {\r\n      case \"audio\":\r\n        setActiveAudioCategory(active);\r\n        break;\r\n      case \"image\":\r\n        setActiveImageCategory(active);\r\n        break;\r\n      case \"text\":\r\n        setActiveTextCategory(active);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function changeActiveTab(active) {\r\n    setActiveTab(active);\r\n  }\r\n\r\n  //Fetch texts\r\n  useEffect(() => {\r\n    // Displays nothing while fetching new text to enhance UX\r\n    setText(null);\r\n\r\n    const url =\r\n      process.env.PUBLIC_URL + \"/content/text/\" + activeTextCategory + \".json\";\r\n    let data = sessionStorage.getItem(url);\r\n\r\n    //If text stored in sessionStorage, no need to fetch again\r\n    if (data) {\r\n      setText(JSON.parse(data).items[activeTab]);\r\n    }\r\n\r\n    //If not fetched before; fetch and store in sessionStorage\r\n    else {\r\n      fetch(url)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          setText(res.items[activeTab]);\r\n          sessionStorage.setItem(url, JSON.stringify(res));\r\n        });\r\n    }\r\n  }, [activeTextCategory, activeTab]);\r\n\r\n  //Fetch audio\r\n  useEffect(() => {\r\n    // Displays nothing while fetching new audio to enhance UX\r\n    setAudio(null);\r\n\r\n    const url =\r\n      process.env.PUBLIC_URL +\r\n      `/content/audio/${activeAudioCategory}/${activeAudioCategory}${activeTab}.mp3`;\r\n    let data = sessionStorage.getItem(url);\r\n\r\n    //If audio stored in sessionStorage, no need to fetch again\r\n    if (data) {\r\n      setAudio(JSON.parse(data));\r\n    }\r\n\r\n    //If not fetched before; fetch and store in sessionStorage\r\n    else {\r\n      setAudio(url);\r\n      sessionStorage.setItem(url, JSON.stringify(url));\r\n    }\r\n  }, [activeAudioCategory, activeTab]);\r\n\r\n  //Fetch image\r\n  useEffect(() => {\r\n    // Displays nothing while fetching new image to enhance UX\r\n    setImage(null);\r\n\r\n    const url =\r\n      process.env.PUBLIC_URL +\r\n      `/content/image/${activeImageCategory}/${activeImageCategory}${activeTab}.svg`;\r\n    let data = sessionStorage.getItem(url);\r\n\r\n    //If image stored in sessionStorage, no need to fetch again\r\n    if (data) {\r\n      setImage(JSON.parse(data));\r\n    }\r\n\r\n    //If not fetched before; fetch and store in sessionStorage\r\n    else {\r\n      fetch(url)\r\n        .then(res => res.text())\r\n        .then(svg => {\r\n          setImage(svg);\r\n          sessionStorage.setItem(url, JSON.stringify(svg));\r\n        });\r\n    }\r\n  }, [activeImageCategory, activeTab]);\r\n\r\n  //Store favourite artcollection in localStorage\r\n  function makeFavourite() {\r\n    if (typeof Storage !== \"undefined\") {\r\n      localStorage.setItem(\"favTab\", activeTab);\r\n      localStorage.setItem(\"favImage\", activeImageCategory);\r\n      localStorage.setItem(\"favAudio\", activeAudioCategory);\r\n      localStorage.setItem(\"favText\", activeTextCategory);\r\n    }\r\n  }\r\n\r\n  //Get favourite artcollection from localStorage (if it exists)\r\n  function showFavourite(e) {\r\n    e.preventDefault();\r\n    if (typeof Storage !== \"undefined\") {\r\n      if (localStorage.favImage) {\r\n        setActiveAudioCategory(localStorage.getItem(\"favAudio\"));\r\n        setActiveImageCategory(localStorage.getItem(\"favImage\"));\r\n        setActiveTextCategory(localStorage.getItem(\"favText\"));\r\n        setActiveTab(localStorage.getItem(\"favTab\"));\r\n      } else {\r\n        console.log(\"You have no favourite :(\");\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div className=\"header\">\r\n        <h1>ART EXHIBITION</h1>\r\n      </div>\r\n\r\n      <div className=\"main\">\r\n\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"flex-container-radio footer\">\r\n          {ART_CATEGORIES.map((element, index) => {\r\n            return (\r\n              <RadioButtons\r\n                changeActiveArt={changeActiveArt}\r\n                active={[\r\n                  activeAudioCategory,\r\n                  activeImageCategory,\r\n                  activeTextCategory\r\n                ]}\r\n                key={index}\r\n                category={element.category}\r\n                choices={element.choices}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}